{
  "name": "ZenScript",
  "scopeName": "source.zenscript",
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "patterns": [
    { "include": "#brackethandlers" },
    { "include": "#preprocessor" },
    { "include": "#comments" },
    { "include": "#string" },
    { "include": "#values" },
    { "include": "#keywords" }
  ],
  "repository": {
    "brackethandlers": {
      "name": "variable.language.brackethandler.zenscript",
      "begin": "\\<(?=[^<> ]+:)",
      "end": "\\>",
      "patterns": [
        {
          "name": "variable.parameter.brackethandler.zenscript",
          "match": "[^<> ]+"
        }
      ]
    },
    "preprocessor": {
      "patterns": [
        {
          "name": "meta.preprocessor.zenscript",
          "begin": "#(?=debug|ignoreBracketErrors|loader|modloaded|norun|priority)",
          "end": "$\\n?"
        }
      ]
    },
    "comments": {
      "patterns": [
        {
          "name": "comment.block.zenscript",
          "begin": "/\\*",
          "end": "\\*/"
        },
        {
          "name": "comment.line.zenscript",
          "begin": "//|#",
          "end": "$\\n?"
        }
      ]
    },
    "string": {
      "patterns": [
        {
          "name": "string.quoted.double.zenscript",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.unicode.zenscript",
              "match": "\\\\u[0-9A-F]{4}"
            },
            {
              "name": "constant.character.escape.zenscript",
              "match": "\\\\."
            }
          ]
        },
        {
          "name": "string.quoted.single.zenscript",
          "begin": "'",
          "end": "'",
          "patterns": [
            {
              "name": "constant.character.escape.unicode.zenscript",
              "match": "\\\\u[0-9A-F]{4}"
            },
            {
              "name": "constant.character.escape.zenscript",
              "match": "\\\\."
            }
          ]
        }
      ]
    },
    "values": {
      "patterns": [
        {
          "name": "constant.numeric.integer.zenscript",
          "match": "(?:0x[A-Fa-f0-9]*)|(?:-?(0|[1-9][0-9]*))"
        },
        {
          "name": "constant.numeric.float.zenscript",
          "match": "-?(0|[1-9][0-9]*).[0-9]+([eE][+-]?[0-9]+)?[fFdD]?"
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.zenscript",
          "match": "\\b(any|bool|byte|short|int|long|float|double|string|function|in|has|void|as|version|return|var|val|global|static|instanceof|break|null|true|false)\\b"
        },
        {
          "name": "keyword.control.import.zenscript",
          "match": "\\bimport\\b"
        },
        {
          "name": "keyword.control.conditional.zenscript",
          "match": "\\b(if|else)\\b"
        },
        {
          "name": "keyword.control.loop.zenscript",
          "match": "\\b(for|while)\\b"
        },
        {
          "name": "keyword.control.class.zenscript",
          "match": "\\b(zenClass|frigginClass)\\b"
        },
        {
          "name": "keyword.control.class.constructor.zenscript",
          "match": "\\b(zenConstructor|frigginConstructor)\\b"
        },
        {
          "name": "keyword.operator",
          "match": "(\\.\\.|\\+=|\\+|-=|-|\\*=|\\*|/=|/|%=|%|\\|=|\\||\\|\\||&=|&&|&|\\^=|\\^|\\?|:|~=|~|;|<=|<|>=|>|==|=|!=|!|\\$)"
        }
      ]
    }
  }
}
